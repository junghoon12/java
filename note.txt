# DI(Dependency Injection : 의존성 주입)
  - DI 는 스프링 핵심 개념 중 하나임.
  
  - 기존에는 어떤 클래스가 다른 클래스의 기능(메서드)을 사용하려면 
       당연히 개발자가 코드에서 직접적으로 사용할 클래스의 생성자를 
       호출해서 사용을 하였음(new 키워드를 이용).
       따라서 사용할 클래스와 사용될 클래스의 관계는 개발자에 의해 직접
       코드에서 부여가 되었음.(의존도가 높음 - 강한 결합)
    
  - 스프링에서는 객체 사이의 의존 관계를 객체 자신이 아닌 외부(스프링 
       컨테이너)에서 수행하는 개념임.
       즉, 이런 연관 관계를 개발자가 직접 코딩을 통해서 부여하는 것이 
       아니라 스프링 컨테이너가 연관 관계를 직접 규정하는 것을 말함. 
       그러면 코드에서 직접적인 연관 관계가 발생하지 않으므로 각각의 
       클래스들의 변경이 자유로와짐(약한 결합).
       따라서 스프링 프레임워크에서는 각 클래스들의 연관 관계를 클래스들 
       간의 사이에서 맺어지는 것이 아니라, 스프링 프레임워크에서 설정을 
       통해 맺어줌으로써 클래스들끼리의 연관 관계를 맺지 않도록 구현을 
       해 놓았음.
       
  - 스프링 프레임워크에서 의존 관계 설정은 설정 파일(bean.xml)이나 
       애노테이션을 이용하여 설정을 함.
  
  - 스프링에서 클래스(빈 : bean)를 담는 그릇을 컨테이너라고 함.
       스프링 기반 애플리케이션에서는 스프링 컨테이너에서 객체가 태어나고, 
       자라고 소멸을 함. 스프링 컨테이너는 객체를 생성하고, 서로 엮어 
       주고 하는 전체적인 생명 주기를 관리함.
       스프링 컨테이너는 스프링 프레임워크 핵심부에 위치함. 스프링 컨테
       이너는 종속 객체 주입을 이용해서 애플리케이션을 구성하는 컴포넌트
       를 관리하며, 협력 컴포넌트 간 연관 관계의 형성도 스프링 컨테이너
       에서 이루어짐.
       
       
# DI(의존성 주입) 하는 방법 - 2가지
  - setter(설정 메서드) 메서드를 이용하는 주입 방법.
  - constructor(인자 생성자)를 이용하는 주입 방법.
  
  * 의존 관계를 설정하는 방법
    - XML 파일을 이용하여 의존 관계 설정.
    - Java 코드를 이용하여 의존 관계 설정. - 애노테이션을 이용.
    - XML 과 Java 를 혼용해서 의존 관계 설정.
    
